//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""2056a47e-e24a-4c04-be82-fb40b2f64da4"",
            ""actions"": [
                {
                    ""name"": ""p1A"",
                    ""type"": ""Button"",
                    ""id"": ""e716e4cb-5cfe-48e3-b62f-064fba95566f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""p1X"",
                    ""type"": ""Button"",
                    ""id"": ""310dcd62-a3b3-43b8-98be-54b5a592975e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""p2A"",
                    ""type"": ""Button"",
                    ""id"": ""7efa73ba-f4e8-4f95-8ff1-96db5c7345b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""p2X"",
                    ""type"": ""Button"",
                    ""id"": ""dc15c35d-5588-4752-8fc6-959a4004c22f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""205be7a8-66a4-4bc5-b596-d0d74a3f5938"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""p1A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0f173c2-2d0a-4554-a365-0041f65f03db"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""p1X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e45e19f-9dd9-4c13-acde-c8c395df55c2"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""p2A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1c7551d-fc0b-4d07-9480-ff99074f0631"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""p2X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_p1A = m_Player.FindAction("p1A", throwIfNotFound: true);
        m_Player_p1X = m_Player.FindAction("p1X", throwIfNotFound: true);
        m_Player_p2A = m_Player.FindAction("p2A", throwIfNotFound: true);
        m_Player_p2X = m_Player.FindAction("p2X", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_p1A;
    private readonly InputAction m_Player_p1X;
    private readonly InputAction m_Player_p2A;
    private readonly InputAction m_Player_p2X;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @p1A => m_Wrapper.m_Player_p1A;
        public InputAction @p1X => m_Wrapper.m_Player_p1X;
        public InputAction @p2A => m_Wrapper.m_Player_p2A;
        public InputAction @p2X => m_Wrapper.m_Player_p2X;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @p1A.started += instance.OnP1A;
            @p1A.performed += instance.OnP1A;
            @p1A.canceled += instance.OnP1A;
            @p1X.started += instance.OnP1X;
            @p1X.performed += instance.OnP1X;
            @p1X.canceled += instance.OnP1X;
            @p2A.started += instance.OnP2A;
            @p2A.performed += instance.OnP2A;
            @p2A.canceled += instance.OnP2A;
            @p2X.started += instance.OnP2X;
            @p2X.performed += instance.OnP2X;
            @p2X.canceled += instance.OnP2X;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @p1A.started -= instance.OnP1A;
            @p1A.performed -= instance.OnP1A;
            @p1A.canceled -= instance.OnP1A;
            @p1X.started -= instance.OnP1X;
            @p1X.performed -= instance.OnP1X;
            @p1X.canceled -= instance.OnP1X;
            @p2A.started -= instance.OnP2A;
            @p2A.performed -= instance.OnP2A;
            @p2A.canceled -= instance.OnP2A;
            @p2X.started -= instance.OnP2X;
            @p2X.performed -= instance.OnP2X;
            @p2X.canceled -= instance.OnP2X;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnP1A(InputAction.CallbackContext context);
        void OnP1X(InputAction.CallbackContext context);
        void OnP2A(InputAction.CallbackContext context);
        void OnP2X(InputAction.CallbackContext context);
    }
}
